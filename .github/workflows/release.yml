name: Create Release

on:
  push:
    tags:
      - "v*.*.*" # Captura todas as tags que seguem o padr√£o vX.Y.Z

permissions:
  contents: write # Grants write access to repository contents

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23"

      - name: Build Binaries
        run: |
          GOOS=linux GOARCH=amd64 go build -o kuma-linux-amd64
          GOOS=darwin GOARCH=amd64 go build -o kuma-darwin-amd64
          GOOS=windows GOARCH=amd64 go build -o kuma-windows-amd64.exe

      - name: Determine if Release is Pre-release
        id: pre_release
        run: |
          if [[ "${GITHUB_REF}" == *"-beta"* || "${GITHUB_REF}" == *"-alpha"* || "${GITHUB_REF}" == *"-rc"* ]]; then
            echo "::set-output name=is_prerelease::true"
          else
            echo "::set-output name=is_prerelease::false"
          fi

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: ${{ steps.pre_release.outputs.is_prerelease }}

      - name: Upload Linux Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./kuma-linux-amd64
          asset_name: kuma-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload macOS Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./kuma-darwin-amd64
          asset_name: kuma-darwin-amd64
          asset_content_type: application/octet-stream

      - name: Upload Windows Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./kuma-windows-amd64.exe
          asset_name: kuma-windows-amd64.exe
          asset_content_type: application/octet-stream
